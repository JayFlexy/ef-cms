const {
  getCreateACaseButton,
  navigateTo: navigateToDocumentQC,
} = require('../support/pages/document-qc');

const {
  fillInCreateCaseFromPaperForm,
} = require('../support/pages/create-paper-petition');

const {
  NOTICE_OF_ATTACHMENTS_IN_NATURE_OF_EVIDENCE,
} = require('../../shared/src/business/entities/EntityConstants');

const createCaseWithAutoGeneratedNANE = () => {
  navigateToDocumentQC('petitionsclerk');
  getCreateACaseButton().click();

  const submitAfterCaseReview = () =>
    cy.get('#submit-case').scrollIntoView().click();

  const confirmSubmissionOfCase = () => cy.get('#confirm').click();
  const visitCaseDetailPage = docketNumber =>
    cy.visit(`/case-detail/${docketNumber}`);
  const confirmViewingOfCaseReciept = () =>
    cy.get('#done-viewing-paper-petition-receipt-button').click();

  fillInCreateCaseFromPaperForm();

  cy.intercept('POST', '**/paper').as('postPaperCase');
  cy.get('#submit-case').click();
  cy.wait('@postPaperCase').then(({ response }) => {
    console.log('response.body', response.body);
    const { docketNumber } = response.body;
    cy.get('#orders-notices-auto-created-in-draft').should('exist');
    submitAfterCaseReview();
    confirmSubmissionOfCase();
    confirmViewingOfCaseReciept();
    visitCaseDetailPage(docketNumber);
  });

  cy.get('#tab-drafts').click();
};

exports.createCaseWithAutoGeneratedNANE = createCaseWithAutoGeneratedNANE;

describe('Verify functionality and expected behaviour of autogenerated Order/Notice after serving a case', () => {
  let orderNoticeTitle = NOTICE_OF_ATTACHMENTS_IN_NATURE_OF_EVIDENCE.title;

  describe('petitions clerk', () => {
    before(() => {
      createCaseWithAutoGeneratedNANE();
    });

    it('should check that the Draft count should increase by 1 and the first item in the draft tab is a NANE', () => {
      cy.get('.icon-tab-unread-messages-count').should('have.text', '1');
      cy.get('.document-viewer--documents-list')
        .children()
        .should('have.length', 1);
      cy.get('#docket-entry-description-0').should(
        'have.text',
        'Notice of Attachments in the Nature of Evidence',
      );
    });

    it('should check that the Draft count is zero after adding the draft item as a docket entry', () => {
      cy.get('a#add-court-issued-docket-entry-button').click();
      cy.get('div.select-react-element__single-value').should(
        'have.text',
        'Notice',
      );
      cy.get('input#free-text').should('have.value', orderNoticeTitle);
      cy.get('button#serve-to-parties-btn').click();
      cy.get('button.modal-button-confirm ').click();
      cy.get('button#print-paper-service-done-button').click();
      cy.get('.icon-tab-unread-messages-count').should('not.exist');
    });
  });

  describe('petitions clerk', () => {
    before(() => {
      createCaseWithAutoGeneratedNANE();
    });

    it('should verify full rendering of the draft item as a pdf', () => {
      cy.intercept('GET', '**/document-download-url').as('viewFullPdf');
      cy.get('button#view-full-pdf').click();
      cy.wait('@viewFullPdf').then(({ response }) => {
        const { url } = response.body;
        cy.request(url).its('status').should('eq', 200);
      });
    });

    it('should delete the draft item and verify that the Draft count is zero', () => {
      cy.get('button#delete-pdf').click();
      cy.get('button.modal-button-confirm').click();

      cy.get('.icon-tab-unread-messages-count').should('not.exist');
    });
  });
});
